project(meloton)
INCLUDE_DIRECTORIES(/data/git/meloton/3rd)
INCLUDE_DIRECTORIES(/data/git/meloton/handler)
INCLUDE_DIRECTORIES(/data/git/meloton/inc)
INCLUDE_DIRECTORIES(/data/git/meloton/message)
INCLUDE_DIRECTORIES(/data/git/meloton/proto/handler)
set(SRC_LIST /data/git/meloton/3rd/json.hpp /data/git/meloton/message/MessageAccept.pb.cc /data/git/meloton/message/MessageActionError.pb.cc /data/git/meloton/message/MessageAlive.pb.cc /data/git/meloton/message/MessageBlockData.pb.cc /data/git/meloton/message/MessageGet.pb.cc /data/git/meloton/message/MessagePut.pb.cc /data/git/meloton/message/MessageRegister.pb.cc /data/git/meloton/message/MessageRequestGet.pb.cc /data/git/meloton/message/MessageRequestGetToken.pb.cc /data/git/meloton/message/MessageRequestPut.pb.cc /data/git/meloton/message/MessageRequestPutToken.pb.cc /data/git/meloton/message/MessageSyncBlock.pb.cc /data/git/meloton/message/MessageToken.pb.cc /data/git/meloton/message/MessageTokenACK.pb.cc /data/git/meloton/message/MessageUpdateBlock.pb.cc /data/git/meloton/src/Array.cpp /data/git/meloton/src/BlockDistributer.cpp /data/git/meloton/src/BlockMeta.cpp /data/git/meloton/src/BlockTable.cpp /data/git/meloton/src/CMDParameter.cpp /data/git/meloton/src/ClientListener.cpp /data/git/meloton/src/ClientManager.cpp /data/git/meloton/src/ClientSession.cpp /data/git/meloton/src/ClusterSession.cpp /data/git/meloton/src/DirectoryMeta.cpp /data/git/meloton/src/Error.cpp /data/git/meloton/src/FS.cpp /data/git/meloton/src/FileMeta.cpp /data/git/meloton/src/MasterConnector.cpp /data/git/meloton/src/MasterHTTPListener.cpp /data/git/meloton/src/MasterHTTPSession.cpp /data/git/meloton/src/MasterSession.cpp /data/git/meloton/src/NodeDetector.cpp /data/git/meloton/src/NodeListener.cpp /data/git/meloton/src/NodeManager.cpp /data/git/meloton/src/NodeMeta.cpp /data/git/meloton/src/NodeSession.cpp /data/git/meloton/src/Path.cpp /data/git/meloton/src/RequestTokenTable.cpp /data/git/meloton/src/TokenPool.cpp /data/git/meloton/src/Variable.cpp /data/git/meloton/src/meloton.cpp)
add_executable(meloton ${SRC_LIST})
set (CMAKE_CXX_COMPILER "/usr/bin/clang++")
set (CMAKE_CXX_FLAGS "-Wall -std=c++11 -pthread")
target_link_libraries(meloton /data/git/meloton/lib/libprotobuf.a)
target_link_libraries(meloton /data/git/meloton/lib/libuv.a)
