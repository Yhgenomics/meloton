// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageToken.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageToken.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MessageToken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageToken_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageToken_2eproto() {
  protobuf_AddDesc_MessageToken_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageToken.proto");
  GOOGLE_CHECK(file != NULL);
  MessageToken_descriptor_ = file->message_type(0);
  static const int MessageToken_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, expire_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, block_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, offset_),
  };
  MessageToken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageToken_descriptor_,
      MessageToken::default_instance_,
      MessageToken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageToken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageToken));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageToken_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageToken_descriptor_, &MessageToken::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageToken_2eproto() {
  delete MessageToken::default_instance_;
  delete MessageToken_reflection_;
}

void protobuf_AddDesc_MessageToken_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022MessageToken.proto\"\213\001\n\014MessageToken\022\r\n"
    "\005token\030\001 \003(\t\022\016\n\006expire\030\002 \003(\003\022\017\n\007address\030"
    "\003 \003(\t\022\014\n\004port\030\004 \003(\005\022\020\n\010block_id\030\005 \003(\003\022\r\n"
    "\005index\030\006 \003(\003\022\014\n\004size\030\007 \003(\003\022\016\n\006offset\030\010 \003"
    "(\003", 162);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageToken.proto", &protobuf_RegisterTypes);
  MessageToken::default_instance_ = new MessageToken();
  MessageToken::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageToken_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageToken_2eproto {
  StaticDescriptorInitializer_MessageToken_2eproto() {
    protobuf_AddDesc_MessageToken_2eproto();
  }
} static_descriptor_initializer_MessageToken_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MessageToken::kTokenFieldNumber;
const int MessageToken::kExpireFieldNumber;
const int MessageToken::kAddressFieldNumber;
const int MessageToken::kPortFieldNumber;
const int MessageToken::kBlockIdFieldNumber;
const int MessageToken::kIndexFieldNumber;
const int MessageToken::kSizeFieldNumber;
const int MessageToken::kOffsetFieldNumber;
#endif  // !_MSC_VER

MessageToken::MessageToken()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageToken)
}

void MessageToken::InitAsDefaultInstance() {
}

MessageToken::MessageToken(const MessageToken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MessageToken)
}

void MessageToken::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageToken::~MessageToken() {
  // @@protoc_insertion_point(destructor:MessageToken)
  SharedDtor();
}

void MessageToken::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageToken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageToken_descriptor_;
}

const MessageToken& MessageToken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageToken_2eproto();
  return *default_instance_;
}

MessageToken* MessageToken::default_instance_ = NULL;

MessageToken* MessageToken::New() const {
  return new MessageToken;
}

void MessageToken::Clear() {
  token_.Clear();
  expire_.Clear();
  address_.Clear();
  port_.Clear();
  block_id_.Clear();
  index_.Clear();
  size_.Clear();
  offset_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string token = 1;
      case 1: {
        if (tag == 10) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token(this->token_size() - 1).data(),
            this->token(this->token_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_token;
        if (input->ExpectTag(16)) goto parse_expire;
        break;
      }

      // repeated int64 expire = 2;
      case 2: {
        if (tag == 16) {
         parse_expire:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_expire())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_expire())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_expire;
        if (input->ExpectTag(26)) goto parse_address;
        break;
      }

      // repeated string address = 3;
      case 3: {
        if (tag == 26) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address(this->address_size() - 1).data(),
            this->address(this->address_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "address");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_address;
        if (input->ExpectTag(32)) goto parse_port;
        break;
      }

      // repeated int32 port = 4;
      case 4: {
        if (tag == 32) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_port())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_port())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_port;
        if (input->ExpectTag(40)) goto parse_block_id;
        break;
      }

      // repeated int64 block_id = 5;
      case 5: {
        if (tag == 40) {
         parse_block_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 40, input, this->mutable_block_id())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_block_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_block_id;
        if (input->ExpectTag(48)) goto parse_index;
        break;
      }

      // repeated int64 index = 6;
      case 6: {
        if (tag == 48) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48, input, this->mutable_index())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_index;
        if (input->ExpectTag(56)) goto parse_size;
        break;
      }

      // repeated int64 size = 7;
      case 7: {
        if (tag == 56) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 56, input, this->mutable_size())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_size())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_size;
        if (input->ExpectTag(64)) goto parse_offset;
        break;
      }

      // repeated int64 offset = 8;
      case 8: {
        if (tag == 64) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 64, input, this->mutable_offset())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_offset())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_offset;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageToken)
  return false;
#undef DO_
}

void MessageToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageToken)
  // repeated string token = 1;
  for (int i = 0; i < this->token_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->token(i).data(), this->token(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "token");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->token(i), output);
  }

  // repeated int64 expire = 2;
  for (int i = 0; i < this->expire_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->expire(i), output);
  }

  // repeated string address = 3;
  for (int i = 0; i < this->address_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->address(i).data(), this->address(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "address");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->address(i), output);
  }

  // repeated int32 port = 4;
  for (int i = 0; i < this->port_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->port(i), output);
  }

  // repeated int64 block_id = 5;
  for (int i = 0; i < this->block_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->block_id(i), output);
  }

  // repeated int64 index = 6;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->index(i), output);
  }

  // repeated int64 size = 7;
  for (int i = 0; i < this->size_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      7, this->size(i), output);
  }

  // repeated int64 offset = 8;
  for (int i = 0; i < this->offset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      8, this->offset(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageToken)
}

::google::protobuf::uint8* MessageToken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageToken)
  // repeated string token = 1;
  for (int i = 0; i < this->token_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token(i).data(), this->token(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "token");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->token(i), target);
  }

  // repeated int64 expire = 2;
  for (int i = 0; i < this->expire_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->expire(i), target);
  }

  // repeated string address = 3;
  for (int i = 0; i < this->address_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address(i).data(), this->address(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "address");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->address(i), target);
  }

  // repeated int32 port = 4;
  for (int i = 0; i < this->port_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->port(i), target);
  }

  // repeated int64 block_id = 5;
  for (int i = 0; i < this->block_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->block_id(i), target);
  }

  // repeated int64 index = 6;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(6, this->index(i), target);
  }

  // repeated int64 size = 7;
  for (int i = 0; i < this->size_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(7, this->size(i), target);
  }

  // repeated int64 offset = 8;
  for (int i = 0; i < this->offset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(8, this->offset(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageToken)
  return target;
}

int MessageToken::ByteSize() const {
  int total_size = 0;

  // repeated string token = 1;
  total_size += 1 * this->token_size();
  for (int i = 0; i < this->token_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->token(i));
  }

  // repeated int64 expire = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->expire_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->expire(i));
    }
    total_size += 1 * this->expire_size() + data_size;
  }

  // repeated string address = 3;
  total_size += 1 * this->address_size();
  for (int i = 0; i < this->address_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->address(i));
  }

  // repeated int32 port = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->port_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->port(i));
    }
    total_size += 1 * this->port_size() + data_size;
  }

  // repeated int64 block_id = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->block_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->block_id(i));
    }
    total_size += 1 * this->block_id_size() + data_size;
  }

  // repeated int64 index = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }

  // repeated int64 size = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->size_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->size(i));
    }
    total_size += 1 * this->size_size() + data_size;
  }

  // repeated int64 offset = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->offset_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->offset(i));
    }
    total_size += 1 * this->offset_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageToken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageToken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageToken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageToken::MergeFrom(const MessageToken& from) {
  GOOGLE_CHECK_NE(&from, this);
  token_.MergeFrom(from.token_);
  expire_.MergeFrom(from.expire_);
  address_.MergeFrom(from.address_);
  port_.MergeFrom(from.port_);
  block_id_.MergeFrom(from.block_id_);
  index_.MergeFrom(from.index_);
  size_.MergeFrom(from.size_);
  offset_.MergeFrom(from.offset_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageToken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageToken::CopyFrom(const MessageToken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageToken::IsInitialized() const {

  return true;
}

void MessageToken::Swap(MessageToken* other) {
  if (other != this) {
    token_.Swap(&other->token_);
    expire_.Swap(&other->expire_);
    address_.Swap(&other->address_);
    port_.Swap(&other->port_);
    block_id_.Swap(&other->block_id_);
    index_.Swap(&other->index_);
    size_.Swap(&other->size_);
    offset_.Swap(&other->offset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageToken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageToken_descriptor_;
  metadata.reflection = MessageToken_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
