// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageToken.proto

#ifndef PROTOBUF_MessageToken_2eproto__INCLUDED
#define PROTOBUF_MessageToken_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageToken_2eproto();
void protobuf_AssignDesc_MessageToken_2eproto();
void protobuf_ShutdownFile_MessageToken_2eproto();

class MessageToken;

// ===================================================================

class MessageToken : public ::google::protobuf::Message {
 public:
  MessageToken();
  virtual ~MessageToken();

  MessageToken(const MessageToken& from);

  inline MessageToken& operator=(const MessageToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageToken& default_instance();

  void Swap(MessageToken* other);

  // implements Message ----------------------------------------------

  MessageToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageToken& from);
  void MergeFrom(const MessageToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string token = 1;
  inline int token_size() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token(int index) const;
  inline ::std::string* mutable_token(int index);
  inline void set_token(int index, const ::std::string& value);
  inline void set_token(int index, const char* value);
  inline void set_token(int index, const char* value, size_t size);
  inline ::std::string* add_token();
  inline void add_token(const ::std::string& value);
  inline void add_token(const char* value);
  inline void add_token(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& token() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_token();

  // repeated int64 expire = 2;
  inline int expire_size() const;
  inline void clear_expire();
  static const int kExpireFieldNumber = 2;
  inline ::google::protobuf::int64 expire(int index) const;
  inline void set_expire(int index, ::google::protobuf::int64 value);
  inline void add_expire(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      expire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_expire();

  // repeated string address = 3;
  inline int address_size() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 3;
  inline const ::std::string& address(int index) const;
  inline ::std::string* mutable_address(int index);
  inline void set_address(int index, const ::std::string& value);
  inline void set_address(int index, const char* value);
  inline void set_address(int index, const char* value, size_t size);
  inline ::std::string* add_address();
  inline void add_address(const ::std::string& value);
  inline void add_address(const char* value);
  inline void add_address(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& address() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_address();

  // repeated int32 port = 4;
  inline int port_size() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::int32 port(int index) const;
  inline void set_port(int index, ::google::protobuf::int32 value);
  inline void add_port(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      port() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_port();

  // repeated int64 block_id = 5;
  inline int block_id_size() const;
  inline void clear_block_id();
  static const int kBlockIdFieldNumber = 5;
  inline ::google::protobuf::int64 block_id(int index) const;
  inline void set_block_id(int index, ::google::protobuf::int64 value);
  inline void add_block_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      block_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_block_id();

  // repeated int64 index = 6;
  inline int index_size() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 6;
  inline ::google::protobuf::int64 index(int index) const;
  inline void set_index(int index, ::google::protobuf::int64 value);
  inline void add_index(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_index();

  // repeated int64 size = 7;
  inline int size_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 7;
  inline ::google::protobuf::int64 size(int index) const;
  inline void set_size(int index, ::google::protobuf::int64 value);
  inline void add_size(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      size() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_size();

  // repeated int64 offset = 8;
  inline int offset_size() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 8;
  inline ::google::protobuf::int64 offset(int index) const;
  inline void set_offset(int index, ::google::protobuf::int64 value);
  inline void add_offset(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      offset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_offset();

  // @@protoc_insertion_point(class_scope:MessageToken)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> token_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > expire_;
  ::google::protobuf::RepeatedPtrField< ::std::string> address_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > port_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > block_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > offset_;
  friend void  protobuf_AddDesc_MessageToken_2eproto();
  friend void protobuf_AssignDesc_MessageToken_2eproto();
  friend void protobuf_ShutdownFile_MessageToken_2eproto();

  void InitAsDefaultInstance();
  static MessageToken* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageToken

// repeated string token = 1;
inline int MessageToken::token_size() const {
  return token_.size();
}
inline void MessageToken::clear_token() {
  token_.Clear();
}
inline const ::std::string& MessageToken::token(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.token)
  return token_.Get(index);
}
inline ::std::string* MessageToken::mutable_token(int index) {
  // @@protoc_insertion_point(field_mutable:MessageToken.token)
  return token_.Mutable(index);
}
inline void MessageToken::set_token(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageToken.token)
  token_.Mutable(index)->assign(value);
}
inline void MessageToken::set_token(int index, const char* value) {
  token_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageToken.token)
}
inline void MessageToken::set_token(int index, const char* value, size_t size) {
  token_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageToken.token)
}
inline ::std::string* MessageToken::add_token() {
  return token_.Add();
}
inline void MessageToken::add_token(const ::std::string& value) {
  token_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageToken.token)
}
inline void MessageToken::add_token(const char* value) {
  token_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageToken.token)
}
inline void MessageToken::add_token(const char* value, size_t size) {
  token_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageToken.token)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageToken::token() const {
  // @@protoc_insertion_point(field_list:MessageToken.token)
  return token_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageToken::mutable_token() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.token)
  return &token_;
}

// repeated int64 expire = 2;
inline int MessageToken::expire_size() const {
  return expire_.size();
}
inline void MessageToken::clear_expire() {
  expire_.Clear();
}
inline ::google::protobuf::int64 MessageToken::expire(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.expire)
  return expire_.Get(index);
}
inline void MessageToken::set_expire(int index, ::google::protobuf::int64 value) {
  expire_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageToken.expire)
}
inline void MessageToken::add_expire(::google::protobuf::int64 value) {
  expire_.Add(value);
  // @@protoc_insertion_point(field_add:MessageToken.expire)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageToken::expire() const {
  // @@protoc_insertion_point(field_list:MessageToken.expire)
  return expire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageToken::mutable_expire() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.expire)
  return &expire_;
}

// repeated string address = 3;
inline int MessageToken::address_size() const {
  return address_.size();
}
inline void MessageToken::clear_address() {
  address_.Clear();
}
inline const ::std::string& MessageToken::address(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.address)
  return address_.Get(index);
}
inline ::std::string* MessageToken::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:MessageToken.address)
  return address_.Mutable(index);
}
inline void MessageToken::set_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageToken.address)
  address_.Mutable(index)->assign(value);
}
inline void MessageToken::set_address(int index, const char* value) {
  address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageToken.address)
}
inline void MessageToken::set_address(int index, const char* value, size_t size) {
  address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageToken.address)
}
inline ::std::string* MessageToken::add_address() {
  return address_.Add();
}
inline void MessageToken::add_address(const ::std::string& value) {
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageToken.address)
}
inline void MessageToken::add_address(const char* value) {
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageToken.address)
}
inline void MessageToken::add_address(const char* value, size_t size) {
  address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageToken.address)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageToken::address() const {
  // @@protoc_insertion_point(field_list:MessageToken.address)
  return address_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageToken::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.address)
  return &address_;
}

// repeated int32 port = 4;
inline int MessageToken::port_size() const {
  return port_.size();
}
inline void MessageToken::clear_port() {
  port_.Clear();
}
inline ::google::protobuf::int32 MessageToken::port(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.port)
  return port_.Get(index);
}
inline void MessageToken::set_port(int index, ::google::protobuf::int32 value) {
  port_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageToken.port)
}
inline void MessageToken::add_port(::google::protobuf::int32 value) {
  port_.Add(value);
  // @@protoc_insertion_point(field_add:MessageToken.port)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MessageToken::port() const {
  // @@protoc_insertion_point(field_list:MessageToken.port)
  return port_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MessageToken::mutable_port() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.port)
  return &port_;
}

// repeated int64 block_id = 5;
inline int MessageToken::block_id_size() const {
  return block_id_.size();
}
inline void MessageToken::clear_block_id() {
  block_id_.Clear();
}
inline ::google::protobuf::int64 MessageToken::block_id(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.block_id)
  return block_id_.Get(index);
}
inline void MessageToken::set_block_id(int index, ::google::protobuf::int64 value) {
  block_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageToken.block_id)
}
inline void MessageToken::add_block_id(::google::protobuf::int64 value) {
  block_id_.Add(value);
  // @@protoc_insertion_point(field_add:MessageToken.block_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageToken::block_id() const {
  // @@protoc_insertion_point(field_list:MessageToken.block_id)
  return block_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageToken::mutable_block_id() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.block_id)
  return &block_id_;
}

// repeated int64 index = 6;
inline int MessageToken::index_size() const {
  return index_.size();
}
inline void MessageToken::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::int64 MessageToken::index(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.index)
  return index_.Get(index);
}
inline void MessageToken::set_index(int index, ::google::protobuf::int64 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageToken.index)
}
inline void MessageToken::add_index(::google::protobuf::int64 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:MessageToken.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageToken::index() const {
  // @@protoc_insertion_point(field_list:MessageToken.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageToken::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.index)
  return &index_;
}

// repeated int64 size = 7;
inline int MessageToken::size_size() const {
  return size_.size();
}
inline void MessageToken::clear_size() {
  size_.Clear();
}
inline ::google::protobuf::int64 MessageToken::size(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.size)
  return size_.Get(index);
}
inline void MessageToken::set_size(int index, ::google::protobuf::int64 value) {
  size_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageToken.size)
}
inline void MessageToken::add_size(::google::protobuf::int64 value) {
  size_.Add(value);
  // @@protoc_insertion_point(field_add:MessageToken.size)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageToken::size() const {
  // @@protoc_insertion_point(field_list:MessageToken.size)
  return size_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageToken::mutable_size() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.size)
  return &size_;
}

// repeated int64 offset = 8;
inline int MessageToken::offset_size() const {
  return offset_.size();
}
inline void MessageToken::clear_offset() {
  offset_.Clear();
}
inline ::google::protobuf::int64 MessageToken::offset(int index) const {
  // @@protoc_insertion_point(field_get:MessageToken.offset)
  return offset_.Get(index);
}
inline void MessageToken::set_offset(int index, ::google::protobuf::int64 value) {
  offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageToken.offset)
}
inline void MessageToken::add_offset(::google::protobuf::int64 value) {
  offset_.Add(value);
  // @@protoc_insertion_point(field_add:MessageToken.offset)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageToken::offset() const {
  // @@protoc_insertion_point(field_list:MessageToken.offset)
  return offset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageToken::mutable_offset() {
  // @@protoc_insertion_point(field_mutable_list:MessageToken.offset)
  return &offset_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageToken_2eproto__INCLUDED
