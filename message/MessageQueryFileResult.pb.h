// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageQueryFileResult.proto

#ifndef PROTOBUF_MessageQueryFileResult_2eproto__INCLUDED
#define PROTOBUF_MessageQueryFileResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageQueryFileResult_2eproto();
void protobuf_AssignDesc_MessageQueryFileResult_2eproto();
void protobuf_ShutdownFile_MessageQueryFileResult_2eproto();

class MessageQueryFileResult;

// ===================================================================

class MessageQueryFileResult : public ::google::protobuf::Message {
 public:
  MessageQueryFileResult();
  virtual ~MessageQueryFileResult();

  MessageQueryFileResult(const MessageQueryFileResult& from);

  inline MessageQueryFileResult& operator=(const MessageQueryFileResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageQueryFileResult& default_instance();

  void Swap(MessageQueryFileResult* other);

  // implements Message ----------------------------------------------

  MessageQueryFileResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageQueryFileResult& from);
  void MergeFrom(const MessageQueryFileResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::int64 session_id() const;
  inline void set_session_id(::google::protobuf::int64 value);

  // required int64 error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline ::google::protobuf::int64 error() const;
  inline void set_error(::google::protobuf::int64 value);

  // required string file_name = 3;
  inline bool has_file_name() const;
  inline void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  inline const ::std::string& file_name() const;
  inline void set_file_name(const ::std::string& value);
  inline void set_file_name(const char* value);
  inline void set_file_name(const char* value, size_t size);
  inline ::std::string* mutable_file_name();
  inline ::std::string* release_file_name();
  inline void set_allocated_file_name(::std::string* file_name);

  // required int64 file_part_id = 4;
  inline bool has_file_part_id() const;
  inline void clear_file_part_id();
  static const int kFilePartIdFieldNumber = 4;
  inline ::google::protobuf::int64 file_part_id() const;
  inline void set_file_part_id(::google::protobuf::int64 value);

  // required int64 file_part_size = 5;
  inline bool has_file_part_size() const;
  inline void clear_file_part_size();
  static const int kFilePartSizeFieldNumber = 5;
  inline ::google::protobuf::int64 file_part_size() const;
  inline void set_file_part_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MessageQueryFileResult)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_file_name();
  inline void clear_has_file_name();
  inline void set_has_file_part_id();
  inline void clear_has_file_part_id();
  inline void set_has_file_part_size();
  inline void clear_has_file_part_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 session_id_;
  ::google::protobuf::int64 error_;
  ::std::string* file_name_;
  ::google::protobuf::int64 file_part_id_;
  ::google::protobuf::int64 file_part_size_;
  friend void  protobuf_AddDesc_MessageQueryFileResult_2eproto();
  friend void protobuf_AssignDesc_MessageQueryFileResult_2eproto();
  friend void protobuf_ShutdownFile_MessageQueryFileResult_2eproto();

  void InitAsDefaultInstance();
  static MessageQueryFileResult* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageQueryFileResult

// required int64 session_id = 1;
inline bool MessageQueryFileResult::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageQueryFileResult::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageQueryFileResult::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageQueryFileResult::clear_session_id() {
  session_id_ = GOOGLE_LONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::int64 MessageQueryFileResult::session_id() const {
  // @@protoc_insertion_point(field_get:MessageQueryFileResult.session_id)
  return session_id_;
}
inline void MessageQueryFileResult::set_session_id(::google::protobuf::int64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:MessageQueryFileResult.session_id)
}

// required int64 error = 2;
inline bool MessageQueryFileResult::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageQueryFileResult::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageQueryFileResult::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageQueryFileResult::clear_error() {
  error_ = GOOGLE_LONGLONG(0);
  clear_has_error();
}
inline ::google::protobuf::int64 MessageQueryFileResult::error() const {
  // @@protoc_insertion_point(field_get:MessageQueryFileResult.error)
  return error_;
}
inline void MessageQueryFileResult::set_error(::google::protobuf::int64 value) {
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:MessageQueryFileResult.error)
}

// required string file_name = 3;
inline bool MessageQueryFileResult::has_file_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageQueryFileResult::set_has_file_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageQueryFileResult::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageQueryFileResult::clear_file_name() {
  if (file_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_name_->clear();
  }
  clear_has_file_name();
}
inline const ::std::string& MessageQueryFileResult::file_name() const {
  // @@protoc_insertion_point(field_get:MessageQueryFileResult.file_name)
  return *file_name_;
}
inline void MessageQueryFileResult::set_file_name(const ::std::string& value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
  // @@protoc_insertion_point(field_set:MessageQueryFileResult.file_name)
}
inline void MessageQueryFileResult::set_file_name(const char* value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageQueryFileResult.file_name)
}
inline void MessageQueryFileResult::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageQueryFileResult.file_name)
}
inline ::std::string* MessageQueryFileResult::mutable_file_name() {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MessageQueryFileResult.file_name)
  return file_name_;
}
inline ::std::string* MessageQueryFileResult::release_file_name() {
  clear_has_file_name();
  if (file_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = file_name_;
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageQueryFileResult::set_allocated_file_name(::std::string* file_name) {
  if (file_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete file_name_;
  }
  if (file_name) {
    set_has_file_name();
    file_name_ = file_name;
  } else {
    clear_has_file_name();
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MessageQueryFileResult.file_name)
}

// required int64 file_part_id = 4;
inline bool MessageQueryFileResult::has_file_part_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageQueryFileResult::set_has_file_part_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageQueryFileResult::clear_has_file_part_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageQueryFileResult::clear_file_part_id() {
  file_part_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_part_id();
}
inline ::google::protobuf::int64 MessageQueryFileResult::file_part_id() const {
  // @@protoc_insertion_point(field_get:MessageQueryFileResult.file_part_id)
  return file_part_id_;
}
inline void MessageQueryFileResult::set_file_part_id(::google::protobuf::int64 value) {
  set_has_file_part_id();
  file_part_id_ = value;
  // @@protoc_insertion_point(field_set:MessageQueryFileResult.file_part_id)
}

// required int64 file_part_size = 5;
inline bool MessageQueryFileResult::has_file_part_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageQueryFileResult::set_has_file_part_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageQueryFileResult::clear_has_file_part_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageQueryFileResult::clear_file_part_size() {
  file_part_size_ = GOOGLE_LONGLONG(0);
  clear_has_file_part_size();
}
inline ::google::protobuf::int64 MessageQueryFileResult::file_part_size() const {
  // @@protoc_insertion_point(field_get:MessageQueryFileResult.file_part_size)
  return file_part_size_;
}
inline void MessageQueryFileResult::set_file_part_size(::google::protobuf::int64 value) {
  set_has_file_part_size();
  file_part_size_ = value;
  // @@protoc_insertion_point(field_set:MessageQueryFileResult.file_part_size)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageQueryFileResult_2eproto__INCLUDED
