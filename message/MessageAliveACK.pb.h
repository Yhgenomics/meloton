// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageAliveACK.proto

#ifndef PROTOBUF_MessageAliveACK_2eproto__INCLUDED
#define PROTOBUF_MessageAliveACK_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageAliveACK_2eproto();
void protobuf_AssignDesc_MessageAliveACK_2eproto();
void protobuf_ShutdownFile_MessageAliveACK_2eproto();

class MessageAliveACK;

// ===================================================================

class MessageAliveACK : public ::google::protobuf::Message {
 public:
  MessageAliveACK();
  virtual ~MessageAliveACK();

  MessageAliveACK(const MessageAliveACK& from);

  inline MessageAliveACK& operator=(const MessageAliveACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageAliveACK& default_instance();

  void Swap(MessageAliveACK* other);

  // implements Message ----------------------------------------------

  MessageAliveACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageAliveACK& from);
  void MergeFrom(const MessageAliveACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::int64 session_id() const;
  inline void set_session_id(::google::protobuf::int64 value);

  // required int64 local_time = 2;
  inline bool has_local_time() const;
  inline void clear_local_time();
  static const int kLocalTimeFieldNumber = 2;
  inline ::google::protobuf::int64 local_time() const;
  inline void set_local_time(::google::protobuf::int64 value);

  // required int64 server_time = 3;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  inline ::google::protobuf::int64 server_time() const;
  inline void set_server_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MessageAliveACK)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_local_time();
  inline void clear_has_local_time();
  inline void set_has_server_time();
  inline void clear_has_server_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 session_id_;
  ::google::protobuf::int64 local_time_;
  ::google::protobuf::int64 server_time_;
  friend void  protobuf_AddDesc_MessageAliveACK_2eproto();
  friend void protobuf_AssignDesc_MessageAliveACK_2eproto();
  friend void protobuf_ShutdownFile_MessageAliveACK_2eproto();

  void InitAsDefaultInstance();
  static MessageAliveACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageAliveACK

// required int64 session_id = 1;
inline bool MessageAliveACK::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageAliveACK::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageAliveACK::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageAliveACK::clear_session_id() {
  session_id_ = GOOGLE_LONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::int64 MessageAliveACK::session_id() const {
  // @@protoc_insertion_point(field_get:MessageAliveACK.session_id)
  return session_id_;
}
inline void MessageAliveACK::set_session_id(::google::protobuf::int64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:MessageAliveACK.session_id)
}

// required int64 local_time = 2;
inline bool MessageAliveACK::has_local_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageAliveACK::set_has_local_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageAliveACK::clear_has_local_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageAliveACK::clear_local_time() {
  local_time_ = GOOGLE_LONGLONG(0);
  clear_has_local_time();
}
inline ::google::protobuf::int64 MessageAliveACK::local_time() const {
  // @@protoc_insertion_point(field_get:MessageAliveACK.local_time)
  return local_time_;
}
inline void MessageAliveACK::set_local_time(::google::protobuf::int64 value) {
  set_has_local_time();
  local_time_ = value;
  // @@protoc_insertion_point(field_set:MessageAliveACK.local_time)
}

// required int64 server_time = 3;
inline bool MessageAliveACK::has_server_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageAliveACK::set_has_server_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageAliveACK::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageAliveACK::clear_server_time() {
  server_time_ = GOOGLE_LONGLONG(0);
  clear_has_server_time();
}
inline ::google::protobuf::int64 MessageAliveACK::server_time() const {
  // @@protoc_insertion_point(field_get:MessageAliveACK.server_time)
  return server_time_;
}
inline void MessageAliveACK::set_server_time(::google::protobuf::int64 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:MessageAliveACK.server_time)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageAliveACK_2eproto__INCLUDED
